{"version":3,"sources":["components/Header.js","components/About.js","components/Resume.js","components/Portfolio.js","components/ContactUs.js","components/Footer.js","resumeData.js","App.js","serviceWorker.js","index.js"],"names":["Header","resumeData","this","props","react_default","a","createElement","Fragment","id","className","href","title","name","style","color","fontFamily","role","roleDescription","socialLinks","map","item","key","url","target","rel","Component","About","src","alt","aboutme","address","email","website","Resume","education","UniversityName","specialization","MonthOfPassing","YearOfPassing","Achievement1","Achievement2","Achievement3","work","CompanyName","MonthOfLeaving","YearOfLeaving","Achievement4","Achievement5","Achievement6","skills","languages","librariesframeworks","database","operatingsystems","versioncontrol","softwares","api","strengths","sdlc","projectmanagement","Porfolio","portfolio","concat","imgurl","tech","description","ContactUs","linkedinId","githubid","Footer","imagebaseurl","skillsDescription","testimonials","App","Header_Header","About_About","Resume_Resume","Portfolio_Porfolio","ContactUs_ContactUs","Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.44abc95a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nexport default class Header extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <React.Fragment>\n      \n      <header id=\"home\">\n         <nav id=\"nav-wrap\">\n            <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">Show navigation</a>\n            <a className=\"mobile-btn\" href=\"/\" title=\"Hide navigation\">Hide navigation</a>\n            <ul id=\"nav\" className=\"nav\">\n               <li className=\"current\"><a className=\"smoothscroll\" href=\"#home\">Home</a></li>\n               <li><a className=\"smoothscroll\" href=\"#about\">About</a></li>\n             <li><a className=\"smoothscroll\" href=\"#resume\">Resume</a></li>\n               <li><a className=\"smoothscroll\" href=\"#portfolio\">Works</a></li>\n               <li><a className=\"smoothscroll\" href=\"#contact\">Contact</a></li>\n            </ul>\n         </nav>\n\n         <div className=\"row banner\">\n            <div className=\"banner-text\">\n               <h1 className=\"responsive-headline\">I am {resumeData.name}.</h1>\n               <h2 style={{color:'#fff', fontFamily:'sans-serif '}}>{resumeData.role} </h2>\n               <h3 style={{color:'#fff', fontFamily:'sans-serif '}}>{resumeData.roleDescription}</h3>\n               <hr/>\n               <ul className=\"social\">\n                  {\n                    resumeData.socialLinks && resumeData.socialLinks.map(item =>{\n                      return(\n                              <li key={item.name}>\n                                <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\"><i className={item.className}></i></a>\n                              </li>\n                            )\n                          }\n                    )\n                  }\n               </ul>\n            </div>\n         </div>\n\n         <p className=\"scrolldown\">\n            <a className=\"smoothscroll\" href=\"#about\"><i className=\"icon-down-circle\"></i></a>\n         </p>\n\n      </header>\n      </React.Fragment>\n    );\n  }\n}","import React, { Component } from 'react';\nexport default class About extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"about\">\n         <div className=\"row\">\n\n            <div className=\"three columns\">\n\n               <img className=\"profile-pic\"  src=\"images/profilepic.jpg\" alt=\"\" />\n\n            </div>\n\n            <div className=\"nine columns main-col\">\n\n               <h2>About Me</h2>\n               <p>\n               {\n                 resumeData.aboutme\n               }\n               </p>\n               <p>I aim to work at an organization where I can learn new technologies and utilize my skills for the development of the Organization.</p>\n\n               <div className=\"row\">\n\n                  <div className=\"columns contact-details\">\n\n                  <h2>Contact Details</h2>\n                  <p className=\"address\">\n       \t\t\t\t\t\t<span>{resumeData.name}</span>\n                     <br></br>\n       \t\t\t\t\t\t   <span>\n                     {resumeData.address}\n                    </span>\n                    <br></br>\n       \t\t\t\t\t\t   <span>\n                     {resumeData.email}\n                    </span>\n                    <br></br>\n                    <span>{resumeData.website}</span>\n       \t\t\t\t\t   </p>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </section>\n    );\n  }\n}","import React, { Component } from 'react';\nexport default  class Resume extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"resume\">\n\n         <div className=\"row education\">\n\n            <div className=\"three columns header-col\">\n               <h1><span>Education</span></h1>\n            </div>\n\n            <div className=\"nine columns main-col\">\n              {\n                resumeData.education && resumeData.education.map((item)=>{\n                  return(\n                    <div className=\"row item\">\n                       <div className=\"twelve columns\">\n                          <h3>{item.UniversityName}</h3>\n                          <p className=\"info\">\n                          {item.specialization}\n                          <span>&bull;</span> <em className=\"date\">{item.MonthOfPassing} {item.YearOfPassing}</em></p>\n                          <ul>\n                           <li>{item.Achievement1}</li>\n                           <li>{item.Achievement2}</li>\n                           <li>{item.Achievement3}</li>\n                          </ul>\n                       </div>\n                    </div>\n                  )\n                })\n              }\n            </div>\n         </div>\n        <div className=\"row work\">\n            <div className=\"three columns header-col\">\n               <h1><span>Work</span></h1>\n            </div>\n\n            <div className=\"nine columns main-col\">\n              {\n                resumeData.work && resumeData.work.map((item) => {\n                  return(\n                    <div className=\"row item\">\n                       <div className=\"twelve columns\">\n                          <h3>{item.CompanyName}</h3>\n                          <p className=\"info\">\n                          {item.specialization}\n                          <span>&bull;</span> <em className=\"date\">{item.MonthOfLeaving} {item.YearOfLeaving}</em></p>\n                          <ul>\n                          <li>{item.Achievement1}</li>\n                          <li>{item.Achievement2}</li>\n                          <li>{item.Achievement3}</li>\n                          <li>{item.Achievement4}</li>\n                          <li>{item.Achievement5}</li>\n                          <li>{item.Achievement6}</li>\n                          </ul>\n                       </div>\n\n                    </div>\n\n                  )\n                })\n              }\n            </div> \n         </div>\n\n\n         <div className=\"row skill\">\n\n            <div className=\"three columns header-col\">\n               <h1><span>Skills</span></h1>\n            </div>\n\n            <div className=\"nine columns main-col\">\n\n   \t\t\t\t<div>\n              {\n                resumeData.skills && resumeData.skills.map((item) => {\n                  return(  \n                    <ul>\n                        <li><strong>•\tLanguages:</strong> {item.languages}</li>\n                        <li><strong>•\tLibraries/Frameworks:</strong> {item.librariesframeworks}</li>\n                        <li><strong>•\tDatabase:</strong> {item.database}</li>\n                        <li><strong>•\tOperating Systems:</strong> {item.operatingsystems}</li>\n                        <li><strong>•\tVersion Control System:</strong> {item.versioncontrol}</li>\n                        <li><strong>•\tSoftware Applications:</strong> {item.softwares}</li>\n                        <li><strong>•\tAPIs:</strong> {item.api}</li>\n                        <li><strong>•\tStrengths:</strong> {item.strengths}</li>\n                        <li><strong>•\tSDLC Models:</strong> {item.sdlc}</li>\n                        <li><strong>•\tProject Management Tool:</strong> {item.projectmanagement}</li>\n                        </ul>\n                  )\n                })\n              }\n\n   \t\t\t\t</div>\n\n   \t\t\t</div>\n\n         </div>\n\n      </section>\n    );\n  }\n}","import React, { Component } from 'react';\nexport default class Porfolio extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"portfolio\">\n      <div className=\"row\">\n        <div className=\"twelve columns collapsed\">\n          <h1>Check Out Some of My Works.</h1>\n          <h1>You can find all my projects on <a href=\"https://github.com/Harnoorsingh5\">Github</a></h1>\n          <div id=\"portfolio-wrapper\" className=\"bgrid-quarters s-bgrid-thirds cf\">\n          {\n            resumeData.portfolio && resumeData.portfolio.map((item)=>{\n              return(\n                <div className=\"columns portfolio-item\">\n                  <div className=\"item-wrap\" key={item.name}>\n                      <img src={`${item.imgurl}`} alt={item.imgurl} className=\"item-img\"/>\n                      <div className=\"overlay\">\n                        <div className=\"portfolio-item-meta\">\n                          <h5>{item.name}</h5>\n                          <p>{item.tech}</p><br></br>\n                          <p>{item.description}</p>\n                        </div>\n                      </div>\n                  </div>\n                </div>\n              )\n            })\n          }\n          </div>\n        </div>\n\n      </div>\n     \n  </section>\n        );\n  }\n}","import React, { Component } from 'react';\nexport default class ContactUs extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"contact\">\n          <div className=\"row section-head\">\n            <div className=\"ten columns\">\n              <p className=\"lead\">\n              Feel free to contact me for any work or suggestions below\n              </p>\n            </div>\n          </div>\n          <div className=\"row\">\n            <aside className=\"eigth columns footer-widgets\">\n              <div className=\"widget\">\n                <h4>LinkedIn :\n                  <a href={resumeData.linkedinId}>{resumeData.linkedinId}</a>\n                </h4>\n                <h4>GitHub :\n                <a href={resumeData.githubid}>{resumeData.githubid}</a>\n                </h4>\n                <h4>Email :\n                  singh1vp@uwindsor.ca\n                </h4>\n              </div>\n            </aside>\n          </div>\n        </section>\n        );\n  }\n}","import React, { Component } from 'react';\nexport default class Footer extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <footer>\n      <div className=\"row\">\n        <div className=\"twelve columns\">\n          <ul className=\"social-links\">\n            {\n              resumeData.socialLinks && resumeData.socialLinks.map((item)=>{\n                return(\n                  <li>\n                    <a href={item.url}>\n                    <i className={item.className} />\n                    </a>\n                  </li>\n                )\n              })\n            }\n          </ul>\n          \n        </div>\n        <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\" /></a></div>\n      </div>\n    </footer>\n    );\n  }\n}","\n\nlet resumeData = {\n    \"imagebaseurl\":\"https://Harnoorsingh5.github.io/\",\n    \"name\": \"Harnoor Singh\",\n    \"role\": \"Software Developer|Master of Applied Computing|Java/JavaScript/Python/Data Science|Seeking an Internship Sept 2020\",\n    \"linkedinId\":\"https://www.linkedin.com/in/harnoor-singh-645b93194/\",\n    \"githubid\": \"https://github.com/Harnoorsingh5\",\n    \"roleDescription\": \"I am a Software Developer with around 1.5 year of Experience in India's largest IT firm, Newgen Software Technologies Ltd. I am highly proficient in Java programming and have enhanced my skills in Web Development technologies like React, JavaScript, Django, Python, and HTML5/CSS, Bootstrap with Relational/NoSQL database systems like MySQL/MongoDB through my industrial experience and academic Projects. \",\n    \"socialLinks\":[\n        {\n          \"name\":\"linkedin\",\n          \"url\":\"https://www.linkedin.com/in/harnoor-singh-645b93194/\",\n          \"className\":\"fa fa-linkedin\"\n        },\n        {\n          \"name\":\"github\",\n          \"url\":\"https://github.com/Harnoorsingh5\",\n          \"className\":\"fa fa-github\"\n        },\n      ],\n    \"aboutme\":\"I am currently  pursuing Master's of Appiled Computing at the University of Windsor. I have a keen interest in Machine Learning and possess a good command in practical implementation using Python. I have completed two projects using ML and Deep Learning technologies and published a paper on Blood Cell Classification using CNN in the IWBBIO conference 2020. I gained substantial fundamental knowledge of the field through my Machine Learning and Artificial Neural Networks courses that I completed in my consecutive course terms respectively. I am currently improving my hold on the Data Structures and Advanced Algorithms through self-learning.I'm a full stack developer with experience in Java, JavaScript, HTML/CSS, SQL, and Oracle SQL. I'm constantly learning new things currently, those things include gaining more experience with  React, Python, TensorFlow and Keras\",\n    \"address\":\"Canada\",\n    \"email\": \"singh1vp@uwindsor.ca\",\n    \"website\":\"https://github.com/Harnoorsingh5\",\n    \"education\":[\n      {\n        \"UniversityName\":\"University of Windsor\",\n        \"specialization\":\"Master of Applied Computing\",\n        \"MonthOfPassing\":\"\",\n        \"YearOfPassing\":\"2021\",\n        \"Achievement1\":\"•\tTook Machine Learning and Optimization, Artificial Neural Networks, Advanced Software Engineering, Advanced Database Topics, Advanced Computing Concepts as my course work.\",\n        \"Achievement2\":\"•\tResearch paper for Blood Cell Classification using CNN selected for IWBBIO conference to be held in Spain.\",\n        \"Achievement3\":\"•\tMentored High School students for SSPC coding competition organized by University of Windsor.\",\n      },\n      {\n        \"UniversityName\":\"Chandigarh University\",\n        \"specialization\":\"BE Computer Science\",\n        \"MonthOfPassing\":\"May\",\n        \"YearOfPassing\":\"2018\",\n        \"Achievement1\":\"\"\n      }\n    ],\n    \"work\":[\n      {\n        \"CompanyName\":\"Newgen Software Technologies Ltd., Delhi NCR, India\",\n        \"specialization\":\"Software Developer\",\n        \"MonthOfLeaving\":\"July 2018 -\",\n        \"YearOfLeaving\":\"July 2019\",\n        \"Achievement1\":\"•\tWorking in a product-based company, worked on the company’s product and on top of that used Java, JavaScript, SQL for development.\",\n        \"Achievement2\":\"•\tRequirement analysis, approach document creation, and calculation of time estimation.\",\n        \"Achievement3\":\"•\tTook ownership of both front-end and back-end development.\",\n        \"Achievement4\":\"•\tCertificate of Appreciation award for promoting Newgen’s values and contributing to the team.\",\n        \"Achievement5\":\"•\tRelease management for SIT, UAT, and production and development of the new products, CR and utilities, testing, and bug tracking.\",\n        \"Achievement6\":\"•\tProvided full lifecycle support to clients from initial client interaction and requirements analysis through design, coding, testing, debugging, implementation, and integration.\"\n      },\n      {\n        \"CompanyName\":\"Sci of Relief, Science Department, University of Windsor\",\n        \"specialization\":\"Freelance Developer\",\n        \"MonthOfLeaving\":\"October 2019 –\",\n        \"YearOfLeaving\":\"December 2019\",\n        \"Achievement1\":\"•\tDeveloped an Angular and NodeJS website that recommends support services on campus for science students.\",\n        \"Achievement2\":\"•\tWorked on constructing a chatbot using Dialog Flow API and integrated the chatbot with the Angular Website.\",\n        \"Achievement3\":\"•\tConstructed two screens for this website using Angular and performed testing of chatbot using various phrases and by capturing the responses and improving them for better user experience.\"\n      }\n    ],\n    \"skillsDescription\":\"My skills\",\n    \"skills\":[\n      {\n        \"languages\":\"Java, Python, JavaScript, CSS, HTML, HTML5, SQL, PL-SQL\",\n        \"librariesframeworks\":\"Bootstrap, jQuery, NumPy, TensorFlow, Keras, React, Django, OpenCV, JUnit, QUnit\",\n        \"database\":\"MySQL, Oracle, MS-SQL, MongoDB\",\n        \"operatingsystems\":\"Mac OS, Windows, UNIX\",\n        \"versioncontrol\":\"Git, GitHub, Bitbucket, SVN\",\n        \"softwares\":\"MS Office, Eclipse, NetBeans, PyCharm, VS Code, Google Colab, Jupyter, Spider, Tableau\",\n        \"api\":\"Dialog Flow, IBM Watson\",\n        \"strengths\":\"Web Development, Logical Problems, Data Analysis, Machine Learning, Neural Networks, Deep Learning, Transfer Learning\",\n        \"sdlc\":\"Agile, Iterative, Waterfall\",\n        \"projectmanagement\":\"ClickUp\"\n\n      }\n\n    ],\n    \"portfolio\":[\n      {\n        \"name\":\"Blood Cell Recognition using CNN\",\n        \"tech\":\"Python, TensorFlow, Keras, Sci-Kit Learn\",\n        \"description\":\"This project classifies White Blood Cells into four categories using microscopic images of blood cells.\",\n        \"imgurl\":\"images/portfolio/bloodcell.jpeg\",\n        \"url\": \"https://link.springer.com/chapter/10.1007/978-3-030-45385-5_65\"\n      },\n      {\n        \"name\":\"Smart Sudoku\",\n        \"tech\":\"Python, TensorFlow, Keras, OpenCV\",\n        \"description\":\"This project takes a raw image of sudoku, processes the image using OpenCV image processing and extracts the digits from sudoku and solves the sudoku using neural networks.\",\n        \"imgurl\":\"images/portfolio/sudoku.png\",\n        \"url\": \"https://github.com/Harnoorsingh5/smart-sudoku\"\n      },\n      {\n        \"name\":\"Messenger\",\n        \"tech\":\"ReactJS, NodeJS, MongoDB, ExpressJS\",  \n        \"description\":\"This project is a real time messenger application which provides a platform to chat with various users individually and in groups.\",\n        \"imgurl\":\"images/portfolio/messenger.jpg\",\n        \"url\": \"https://github.com/Harnoorsingh5/MongoDBMessenger\"\n      },\n      {\n        \"name\":\"Sci of Relief\",\n        \"tech\":\"Angular, Dialog Flow, NodeJS, TypeScript\",\n        \"description\":\"Developed a website that recommends support services on campus for science students.\",\n        \"imgurl\":\"images/portfolio/sciofrelief.png\",\n        \"url\": \"/\"\n      },\n      {\n        \"name\":\"Search Engine\",\n        \"tech\":\"Java\",\n        \"description\":\"This project is a basic search engine that crawls the website and stores it locally and then the user can search for the keywords and get the required results.\",\n        \"imgurl\":\"images/portfolio/searchengine.jpg\",\n        \"url\": \"https://github.com/Harnoorsingh5/search_engine\"\n      },\n      {\n        \"name\":\"Social Media\",\n        \"tech\":\"Django, Pyhton, HTML, CSS, Bootstrap\",\n        \"description\":\"This project provides a very basic social media website where users can create new groups, join those groups, create, update, and delete posts in the group.\",\n        \"imgurl\":\"images/portfolio/shopping.jpg\",\n        \"url\": \"https://github.com/Harnoorsingh5/social_media_django\"\n      },\n      {\n        \"name\":\"E-Commerce\",\n        \"tech\":\"React, NodeJS\",\n        \"description\":\"This project provides a basic platform for shopping clothes for both men and women.\",\n        \"imgurl\":\"images/portfolio/socialmedia.png\",\n        \"url\": \"https://github.com/Harnoorsingh5/clothing-ecommerce-website\"\n      },\n      {\n        \"name\":\"Socket Online Game\",\n        \"tech\":\"C, socket programming\",\n        \"description\":\"This project is a two players dice game between two computer players which connects with a server using socket programming in C.\",\n        \"imgurl\":\"images/portfolio/socketgame.jpg\",\n        \"url\": \"https://github.com/Harnoorsingh5/socket-online-game\"\n      }\n    ],\n    \"testimonials\":[\n      {\n        \"description\":\"This is a sample testimonial\",\n        \"name\":\"Some technical guy\"\n      },\n      {\n        \"description\":\"This is a sample testimonial\",\n        \"name\":\"Some technical guy\"\n      }\n    ]\n  }\n  \n  export default resumeData","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport About from './components/About';\nimport Resume from './components/Resume';\nimport Portfolio from './components/Portfolio';\nimport ContactUs from './components/ContactUs';\nimport Footer from './components/Footer';\nimport resumeData from './resumeData';\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header resumeData={resumeData}/>\n        <About resumeData={resumeData}/>\n        <Resume resumeData={resumeData}/>\n        <Portfolio resumeData={resumeData}/>\n        <ContactUs resumeData={resumeData}/>\n        <Footer resumeData={resumeData}/>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}